name: Deploy to AWS

on:
  push:
    branches:
      - main
      - develop

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - environment: hyp3
            domain: hyp3-api.asf.alaska.edu
            deploy_ref: refs/heads/main
            job_files: job_spec/AUTORIFT.yml job_spec/INSAR_GAMMA.yml job_spec/RTC_GAMMA.yml

          - environment: hyp3-test
            domain: hyp3-test-api.asf.alaska.edu
            job_files: >-
              job_spec/AUTORIFT.yml 
              job_spec/INSAR_GAMMA.yml 
              job_spec/RTC_GAMMA.yml 
              job_spec/INSAR_ISCE.yml   
              job_spec/WATER_MAP.yml
            deploy_ref: refs/heads/develop

          - environment: hyp3-edc-uat
            domain: ''
            deploy_ref: refs/heads/develop
            job_files: job_spec/AUTORIFT.yml job_spec/INSAR_GAMMA.yml job_spec/RTC_GAMMA.yml

          - environment: hyp3-autorift
            domain: hyp3-autorift.asf.alaska.
            deploy_ref: refs/heads/main
            job_files: job_spec/AUTORIFT_ITS_LIVE.yml

          - environment: hyp3-autorift-eu
            domain: hyp3-autorift-eu.asf.alaska.edu
            deploy_ref: refs/heads/main
            job_files: job_spec/AUTORIFT_ITS_LIVE_EU.yml

          - environment: hyp3-isce
            domain: hyp3-isce.asf.alaska.edu
            deploy_ref: refs/heads/main
            job_files: job_spec/INSAR_ISCE.yml job_spec/INSAR_ISCE_TEST.yml

          - environment: hyp3-tibet
            domain: hyp3-tibet.asf.alaska.edu
            deploy_ref: refs/heads/main
            job_files: job_spec/INSAR_ISCE.yml job_spec/INSAR_ISCE_TEST.yml

    environment:
      name: ${{ matrix.environment }}
      url: https://${{ matrix.domain }}

    steps:
      - uses: actions/checkout@v2

      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.V2_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.V2_AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.V2_AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: render and install
        run: |
          make install
          make files='${{ matrix.job_files }}' render

      - uses: youyo/aws-cdk-github-actions@v2
        with:
          cdk_subcommand: 'deploy'
          cdk_stack: ${{ matrix.environment }}
          cdk_args: "--require-approval never --parameters Domain='${{ matrix.domain }' ParametersArn='${{ secrets.PARAMETERS_ARN }'"
          actions_comment: false
  tag:
    runs-on: ubuntu-latest
    needs: deploy
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          token: ${{ secrets.TOOLS_BOT_PAK }}

      - uses: actions/setup-python@v1
        with:
          python-version: 3.8

      - name: install python dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install bump2version

      - name: Get associated PR
        uses: helaili/github-graphql-action@2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.TOOLS_BOT_PAK }}
        with:
          query: .github/queries/asssociated-pr.query.yml
          outputFile: pr.json
          owner: ASFHyP3
          name: hyp3
          sha: ${{ github.sha }}

      - name: Get PR labels
        uses: helaili/github-graphql-action@2.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.TOOLS_BOT_PAK }}
        with:
          query: .github/queries/pr-labels.query.yml
          outputFile: labels.json
          owner: ASFHyP3
          name: hyp3

      - name: Tag version
        run: |
          git fetch origin +refs/tags/*:refs/tags/*
          git config user.email "UAF-asf-apd@alaska.edu"
          git config user.name "tools-bot"
          LABEL_QUERY='.data.repository.pullRequest.labels.nodes[].name'
          SELECT='select(. == "major" or . == "minor" or . == "patch")'
          BUMP_PART=$(jq --raw-output  "${LABEL_QUERY} | ${SELECT}" labels.json | sort | head -1)
          PR_QUERY='.data.repository.commit.associatedPullRequests.edges[0].node.title'
          TAG_MSG=$(jq --raw-output "${PR_QUERY}"  pr.json)
          bump2version --current-version $(git describe --abbrev=0) \
              --tag --tag-message "${TAG_MSG}" "${BUMP_PART}"
          git push --tags
          echo "Tagged version $(git describe --abbrev=0) and pushed back to repo"
